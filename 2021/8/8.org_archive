#    -*- mode: org -*-


Archived entries from file /Users/joris/Desktop/advent of code 2021/8/8.org


* 8.2
:PROPERTIES:
:ARCHIVE_TIME: 2021-12-08 Wed 22:07
:ARCHIVE_FILE: ~/Desktop/advent of code 2021/8/8.org
:ARCHIVE_CATEGORY: 8
:END:

Import helper libraries to make elisp development a bit easier
#+begin_src emacs-lisp
  (require 's)
  (require 'f)
  (require 'seq)
  (require 'dash)
  (require 'cl-lib)
#+end_src

#+RESULTS:
: cl-lib


#+begin_src emacs-lisp
  (let ((permutation-table (-map (lambda (l) (-zip '("a" "b" "c" "d" "e" "f" "g") l))(-permutations '("a" "b" "c" "d" "e" "f" "g")))))
    (s-replace-all (nth 42 permutation-table) "abcdefg"))
#+end_src

#+RESULTS:
: abdgcef


#+begin_src emacs-lisp
  (defun my-sort-words (s)
    (-map (lambda (x) (sort (string-to-char x) #'char<)) (s-split " " s)))

  (my-sort-words "be cfbegad cbdgef fgaecd cgeb fdcge agebfd fecdb fabcd edb")
#+end_src


#+begin_src emacs-lisp
  (-sort '< (string-to-char "test"))
#+end_src


#+RESULTS:
: 116

#+begin_src emacs-lisp
  (let ((permutation-table (-map (lambda (l) (-zip '("a" "b" "c" "d" "e" "f" "g") l))(-permutations '("a" "b" "c" "d" "e" "f" "g")))))
    (cl-loop for p in permutation-table
             if (string= (s-replace-all p "be cfbegad cbdgef fgaecd cgeb fdcge agebfd fecdb fabcd edb") "abcdefg")  return p
             finally return nil))
#+end_src

#+RESULTS:
: ((a . b) (b . a) (c . d) (d . c) (e . f) (f . e) (g . g))
